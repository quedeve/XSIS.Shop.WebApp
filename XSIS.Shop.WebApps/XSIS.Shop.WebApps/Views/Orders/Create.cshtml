@model XSIS.Shop.Models.Order

@{
    ViewBag.SelectedHome = "";
    ViewBag.SelectedCustomer = "";
    ViewBag.SelectedSupplier = "";
    ViewBag.SelectedProduct = "";
    ViewBag.SelectedOrder = "active";
    ViewBag.Title = "Create New Order";
}

<style>
    .error {
        color: red;
    }
</style>

<div class="block-header">
    <h2>Form Create New Order</h2>
</div>

<div class="card">
    <div class="card-header">
        <h2>
            Create New Order
            <small>
                Form di bawah ini digunakan untuk mengisi data order baru.
            </small>
        </h2>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "error" })

        <div class="card-body card-padding">
            <div class="form-group">
                <div class="fg-line">
                    @Html.LabelFor(model => model.OrderNumber)
                    @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control input-sm", @placeholder = "Autogenerated By System", @readonly = "readonly" } })
                </div>
                @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "error" })
            </div>
            <div class="form-group fg-line">
                @Html.LabelFor(model => model.OrderDate)

                <div class="input-group form-group">
                    <span class="input-group-addon"><i class="zmdi zmdi-calendar"></i></span>
                    <div class="dtp-container">
                        @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control date-picker", @placeholder = "Click here for Order Date..." } })
                    </div>
                </div>

                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div class="fg-line">
                    @Html.Label("Customer Name")
                    @Html.DropDownList("CustomerId", null, "-- Please Select Customer --", htmlAttributes: new { @class = "form-control input-sm selectpicker" })
                </div>
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div class="fg-line">
                    @Html.Label("Detail Item")
                    <a class="modal-lzink btn btn-primary" onclick="CreateModal();">
                        Add Item
                    </a>
                </div>
            </div>
            <div class="form-group">
                <div class="fg-line">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>
                                    Product Name
                                </th>
                                <th>
                                    Unit Price
                                </th>
                                <th>
                                    Order Quantity
                                </th>
                                <th>
                                    Total Amount
                                </th>
                                <th>
                                    Action
                                </th>
                            </tr>
                        </thead>
                        <tbody id="tbl-orderitem"></tbody>
                    </table>
                    
                </div>
            </div>
            <div class="form-group">
                <div class="fg-line">
                    @Html.LabelFor(model => model.TotalAmount)
                    @Html.Editor("GrandTotal", new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "readonly" } })
                </div>
                @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "error" })
            </div>
            <a href="@Url.Action("Index", "Orders")" class="btn btn-info btn-sm m-t-10">Back to Index</a>
            <button type="submit" class="btn btn-primary btn-sm m-t-10">Simpan</button>
        </div>
    }
</div>

<!-- Modal Default -->
<div class="modal fade" id="modal-input" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="modal-data">
        </div>
    </div>
</div>
@*<div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@


<script type="text/javascript">
        //        $(document).ready(function(){
        //            $('body').on('click', '#btn-color-targets > .btn', function(){
        //                var color = $(this).data('target-color');
        //                $('#modalColor').attr('data-modal-color', color);
        //            });
        //});

        function CreateModal() {
            $.ajax({
                type: "GET",
                url: "/Orders/OrderItem",
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    $('.modal-content').html(data);
                    $('#modal-input').modal('show');
                },
                error: function (data) {
                    alert("pret ada error");
                }
            })
            }

        function loadItemOrder() {
           $.ajax({
                    type:"get",
                    url: "@Url.Action("GetCurrentItemToOrder", "Orders")",
                        contentType: "application/json;charset=utf-8",
                    success: function (data) {


                        $("#tbody").html(data);
                    },
                    error: function (data) {
                        allert("Error Euy");
                    }
                })
    }

    $(window).load(function () {
        alert("(window).load sudah terbuka");
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
